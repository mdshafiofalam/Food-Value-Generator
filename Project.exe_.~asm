INCLUDE "EMU8086.INC"
.MODEL SMALL
.STACK 100H
.DATA

FINPUT DW 100 DUP('$')
F1 DW "SUSHI$"
F2 DW "UDON$"
F3 DW "TOFU$"
F4 DW "TEMPURA$"
F5 DW "YAKITORI$"
F6 DW "SASHIMI$"
F7 DW "RAMEN$"
F8 DW "DONBURI$"
F9 DW "NATTO$"
F10 DW "ODEN$"
V DW 0


INPUT DW 0
INPUTFC DW 0
TEMP DW 0
V1 DW  0

V3 DW 0

K DW 0

FNAMEFOOD DB 'Food.txt',0
FNAMECCALORIE DB 'Calorie.txt',0

HANDLE DW ?

BUFFERFOOD DW 100 DUP(?)
COUNTFOOD DW 100

BUFFERCALORIE DW 500 DUP(?)
COUNTCALORIE DW 500


.CODE
MAIN PROC
MOV AX,@DATA
MOV DS,AX
MOV ES, AX
MOV CX, 0

PRINT "Today In Store:"

PRINTN
PRINTN
PRINTN

Call READFOOD

PRINTN
PRINTN
PRINTN

PRINT "WHAT DO YOU WNAT TO EAT TODAY(CAPITAL LETTER)?"

PRINTN
CALL FOODINPUT


PRINTN
PRINTN
PRINTN

CALL GETNUMBER
MOV K, BX
CMP DX, 0
JE LAST:

PRINTN
PRINTN
PRINTN
Call READCALORIE

PRINTN
PRINTN
PRINTN

MOV BX, k




CALL GETCALORIE

PRINTN
PRINTN
PRINTN

CALL CALORIECALCULATION

LAST:
MOV AH,4CH
INT 21H
MAIN ENDP


;Reading The food file
READFOOD PROC


MOV AH,3DH
MOV DX,OFFSET(FNAMEFOOD)
MOV AL,0
INT 21H
MOV HANDLE,AX

MOV AH,3FH
MOV BX,HANDLE
MOV DX,OFFSET(BUFFERFOOD)
MOV CX,100
INT 21H


MOV SI,OFFSET(BUFFERFOOD)
LFOOD:
MOV AH,2
MOV DL,[SI]
INT 21H
INC SI
DEC COUNTFOOD
JNZ LFOOD

RET
READFOOD ENDP
;END READING THE FOOD FILE



;FOOD INPUT FROM USER
FOODINPUT PROC
MOV CX, 0
MOV SI, 0
R:
MOV AH, 1
INT 21H
XOR AH, AH
MOV FINPUT[SI], AX
INC SI
INC CX
CMP AL, 13
JNE R

END:
MOV SI, 0
MOV V, CX
PRINTN

PRINT "YOU SELECTED: "

LFI:
MOV AH, 2
MOV DX, FINPUT[SI]
INT 21H
INC SI
LOOP LFI


RET
ENDP FOODINPUT


;END FOOD INPUT FROM USER

;GETTING FOOD NUMBER
GETNUMBER PROC

XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F1

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE CKF2

MOV BX, 1
JMP EXIT

CKF2:
XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F2

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE CKF3
MOV BX, 2
JMP EXIT

CKF3:
XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F3

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE CKF4
MOV BX, 3
JMP EXIT

CKF4:
XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F4

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE CKF5
MOV BX, 4
JMP EXIT


CKF5:
XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F5

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE CKF6
MOV BX, 5
JMP EXIT

CKF6:
XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F6

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE CKF7
MOV BX, 6
JMP EXIT

CKF7:
XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F7

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE CKF8
MOV BX, 7
JMP EXIT


CKF8:
XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F8

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE CKF9
MOV BX, 8
JMP EXIT


CKF9:
XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F9

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE CKF10
MOV BX, 9
JMP EXIT


CKF10:
XOR SI, SI
XOR DI, DI
LEA SI, FINPUT
LEA DI, F10

MOV CX, V
SUB CX, 1

REPE CMPSB
JNE WRONG
MOV BX, 10
JMP EXIT

WRONG:
PRINT "RESTART"
MOV DX, 0

EXIT:
RET
ENDP GETNUMBER
;GETTING FOOD NUMBER



;GETTING CALORIE

GETCALORIE PROC
PRINT "GETINTG NECESSARY INFO"

CMP BX, 1
JNE GTC2
MOV BX, 570
MOV V3, BX

GTC2:
CMP BX,2
JNE GTC3
MOV BX, 300
MOV V3, BX

GTC3:
CMP BX,3
JNE GTC4
MOV BX, 223
MOV V3, BX

GTC4:
CMP BX,4
JNE GTC5
MOV BX, 800
MOV V3, BX


GTC5:
CMP BX,5
JNE GTC6
MOV BX, 620
MOV V3, BX

GTC6:
CMP BX,6
JNE GTC7
MOV BX, 268
MOV V3, BX


GTC7:
CMP BX,7
JNE GTC8
MOV BX, 720
MOV V3, BX

GTC8:
CMP BX,8
JNE GTC9
MOV BX, 597
MOV V3, BX

GTC9:
CMP BX,9
JNE GTC10
MOV BX, 425
MOV V3, BX

GTC10:
CMP BX,10
JNE EXIT3:
MOV BX, 357
MOV V3, BX

EXIT3:
RET
ENDP GETCALORIE

;END GETTING CALORIE

;CALCULATE FULL CALORIE
CALORIECALCULATION PROC
MOV V1, SP

PRINTN
PRINT "SERVING NUMBER: "

AG:
MOV AH, 1
INT 21H
CMP AL, 13
JE END1

SUB AL, 48
XOR AH, AH
MOV TEMP, AX

MOV AX, INPUT
MOV BX, 10
MUL BX
ADD AX, TEMP
MOV INPUT, AX
MOV INPUTFC, AX
JMP AG


END1:

PRINTN
PRINT "NUMBER OF SERVING "


RE1:
XOR AX, AX
XOR DX, DX
XOR BX, BX
MOV AX, INPUT
MOV BX, 10
DIV BX
MOV INPUT, AX

PUSH DX

MOV INPUT, AX
CMP AX, 0
JNE RE1


PRINT1:
MOV AH, 2
POP DX
ADD DX, 48
INT 21H
CMP SP, V1
JNE PRINT1
JE EXIT1
EXIT1:

PRINTN
PRINT "YOUR TOTAL CALORIE IS "

XOR AX, AX
MOV AX, INPUTFC
MOV BX, V3
MUL BX
MOV INPUTFC, AX

RE2:
XOR AX, AX
XOR DX, DX
XOR BX, BX
MOV AX, INPUTFC
MOV BX, 10
DIV BX
MOV INPUTFC, AX

PUSH DX

MOV INPUTFC, AX
CMP AX, 0
JNE RE2


PRINT2:
MOV AH, 2
POP DX
ADD DX, 48
INT 21H
CMP SP, V1
JNE PRINT2
JE EXIT2
EXIT2:

PRINT " CAL"


RET
ENDP CALORIECALCULATION


;END CALCULATE FULL CALORIE


;READING THE CALORIE FILE
READCALORIE PROC

MOV AH,3DH
MOV DX,OFFSET(FNAMECCALORIE)
MOV AL,0
INT 21H
MOV HANDLE,AX

MOV AH,3FH
MOV BX,HANDLE
MOV DX,OFFSET(BUFFERCALORIE)
MOV CX,500
INT 21H


MOV SI,OFFSET(BUFFERCALORIE)
LCALORIE:
MOV AH,2
MOV DL,[SI]
INT 21H
INC SI
DEC COUNTCALORIE
JNZ LCALORIE

RET
READCALORIE ENDP
;READING THE CALORIE FILE


END MAIN



; [SOURCE]: E:\EDU\BSc. In CSE\Course\L2 T3 Fall 19\CSE 231 + CSE 232 Microprocessor & Assembly Language Theory + Lab\Mine\Project\Project.asm
